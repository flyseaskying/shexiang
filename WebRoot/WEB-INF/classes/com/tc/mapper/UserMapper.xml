<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tc.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="com.tc.entity.User" >
    <id column="id" property="id" jdbcType="BIGINT" />
    
    <result column="nick_name" property="nickName" jdbcType="VARCHAR" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="dj" property="dj" jdbcType="VARCHAR" />
    <result column="update_date" property="updateDate" jdbcType="VARCHAR" />
    <result column="role_id" property="roleId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id,nick_name, user_name, password, dj, update_date, role_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap">
   use ${db}; select 
    <include refid="Base_Column_List" />
    from EUsers
    where id = #{id}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
     use ${db}; delete from EUsers
    where id = #{id}
  </delete>
  <insert id="insert" parameterType="com.tc.entity.User" >
     use ${db};insert into EUsers (nick_name,user_name, password, 
      dj, update_date, role_id
      )
    values (#{user.nickName,jdbcType=VARCHAR},#{user.userName,jdbcType=VARCHAR}, #{user.password,jdbcType=VARCHAR}, 
      #{user.dj,jdbcType=VARCHAR}, #{user.updateDate,jdbcType=VARCHAR}, #{user.roleId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.tc.entity.User" >
    insert into EUsers
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="nickName != null" >
        nick_name,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="dj != null" >
        dj,
      </if>
      <if test="updateDate != null" >
        update_date,
      </if>
      <if test="roleId != null" >
        role_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="dj != null" >
        #{dj,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null" >
        #{roleId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.tc.entity.User" >
    update EUsers
    <set >
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="dj != null" >
        dj = #{dj,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null" >
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tc.entity.User" >
    update EUsers
    set user_name = #{user.userName,jdbcType=VARCHAR},
      nick_name = #{user.nickName,jdbcType=VARCHAR},
      password = #{user.password,jdbcType=VARCHAR},
      dj = #{user.dj,jdbcType=VARCHAR},
      update_date = #{user.updateDate,jdbcType=VARCHAR},
      role_id = #{user.roleId,jdbcType=INTEGER}
    where id = #{user.id,jdbcType=BIGINT}
  </update>
  
  <select id="selectByUserNameAndPwd" resultMap="BaseResultMap">
   use ${db}; select 
    <include refid="Base_Column_List" />
    from EUsers
    where user_name = #{user.userName} and password = #{user.password}
  </select>
  
  <select id="selectAll" resultMap="BaseResultMap">
   use ${db}; select 
    <include refid="Base_Column_List" />
    from EUsers
  </select>
  
  
</mapper>